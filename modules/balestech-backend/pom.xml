<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!--
	  - PAI -> POM RAIZ
	  -->
	<parent>
		<groupId>com.balestech.suite</groupId>
		<artifactId>balestech-suite</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<!--
	  - ARTIFACT ID DEFINITIONS
	  -->
	<groupId>com.balestech.suite.api</groupId>
	<artifactId>api</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Balestech :: Financial System :: APIs :: Modules</name>

	<!--
     - PROPERTIES
     -->
	<properties>
		<java.version>20</java.version>
		<main.basedir>${basedir}/..</main.basedir>
		<maven.compiler.source>20</maven.compiler.source>
		<maven.compiler.target>20</maven.compiler.target>
	</properties>

	<!--
     - MODULES
     -->
	<modules>
		<module>commom</module>
		<module>indicators</module>
		<module>calculation-methods</module>
		<module>b3-scrap</module>
		<module>b3-web</module>
		<module>b3-kafka</module>
	</modules>

	<!--
	 - DEPENDENCIES
	 -->
	<dependencies>

		<!--
          - Ponto de partida comum para a construção de aplicativos web usando o Spring Boot
         -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>


		<!--
          - LOMBOK -> Sintaxe Sugar
         -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!--
           **
           * Essa biblioteca fornece uma série de utilitários e classes auxiliares para manipulação de
           * strings, arrays, datas, números e outras operações comuns em programação Java.
           **
         -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>

		<!--
          - A dependência org.openapitools:jackson-databind-nullable é uma extensão da biblioteca Jackson DataBind que adiciona
          - suporte para anotações de nulabilidade no processo de serialização e desserialização de objetos Java para JSON.
		  -
		  - Essa extensão é especialmente útil ao trabalhar com a especificação OpenAPI (anteriormente conhecida como Swagger) para descrever APIs.
         -->
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.2.6</version>
		</dependency>

		<!--
          - A Jakarta Validation API é baseada na especificação Bean Validation, que é um padrão para a validação de objetos em Java.
          - Ela fornece um conjunto de anotações, como @NotNull, @Size, @Email, @Pattern, entre outras, que podem ser aplicadas
          - aos campos de um objeto para especificar as regras de validação.
         -->
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>3.0.2</version>
		</dependency>

		<!--
          - O Jakarta Servlet API fornece um conjunto de classes e métodos para manipular solicitações HTTP,
          - gerar respostas, gerenciar sessões, lidar com cookies, realizar redirecionamentos, entre outras funcionalidades relacionadas
          - à comunicação entre um cliente (navegador) e um servidor web.
         -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.0.0</version>
			<scope>provided</scope>
		</dependency>

		<!--
          - Dependência do Spring Boot que fornece suporte para testes automatizados em aplicativos Spring Boot:
          - Além do JUnit e do Spring Test, a dependência inclui outras ferramentas de teste úteis, como o AssertJ
          - para asserções fluentes, o Hamcrest para asserções mais flexíveis, o Mockito para simulação de objetos
          - e o Selenium para testes de interface do usuário.
         -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--
          - Gerar relatórios CSV
         -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>5.7.1</version>
		</dependency>

		<!--
          - Permite utilizar o Feign client
         -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
			<version>4.0.2</version>
		</dependency>

		<!--
      - Gera o Swagger em swagger-ui/index.html
     -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.0.2</version>
		</dependency>

		<!--
		  - Projeto COMMOM BALESTECH
		 -->
		<dependency>
			<groupId>com.balestech.api.microservice</groupId>
			<artifactId>commom</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>

		<!--
		  - Usado para ler o application.yml
		 -->
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>2.0</version>
		</dependency>

	</dependencies>


</project>
